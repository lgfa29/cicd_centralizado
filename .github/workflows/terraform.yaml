name: "Terraform Executa Modulo"

on:
  workflow_call:
    inputs:
      os_version:
        description: "Versão do sistema operacional"
        required: false
        default: "ubuntu-20.04"
        type: string
      workspace:
        description: "Define o workspace em que o modulo será executado"
        required: false
        default: ""
        type: string
      plan:
        description: "Define se será executado ou não o step Terraform Plan"
        required: false
        default: false
        type: boolean
      apply:
        description: "Define se será executado ou não o step Terraform Apply"
        required: false
        default: false
        type: boolean
      working_directory:
        description: "Diretório onde a pipeline irá atuar"
        required: false
        default: "."
        type: string

jobs:
  terraform:
    name: Terraform workflow
    runs-on: ${{ inputs.os_version }}
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # É esperado que secrets sejam herdados do repositório que está chamando
      # a pipeline e que esses secrets serão usados para configurar providers
      # to Terraform usando variáveis de ambiente.
      # Esse step irá export todos os secrets disponíveis como variáveis de
      # ambiente para os passos seguintes.
      - uses: mentoriaiac/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Lê versão do Terraform
        id: tf-version
        run: |
          TF_VERSION=$(sed -nr 's/\s*required_version\s+=\s+"(.*)"/\1/p' *.tf)
          echo "::set-output name=version::$TF_VERSION"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ steps.tf-version.outputs.version }}

      - name: Terraform Version
        run: terraform version

      - name: Terraform Format
        run: terraform fmt -check -diff

      - name: Terraform Workspace
        if: ${{ inputs.workspace != '' }}
        run: terraform workspace select ${{ inputs.workspace }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Validação do tfsec
        run: |
          docker run --rm -v $PWD:/app -w /app tfsec/tfsec .

      - name: Terraform Plan
        if: ${{ inputs.plan }}
        run: terraform plan -out tfplan

      - name: Terraform Apply
        if: ${{ inputs.plan && inputs.apply }}
        run: terraform apply tfplan
